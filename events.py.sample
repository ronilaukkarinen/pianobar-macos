#!/usr/bin/env python
API_KEY = ""
API_SECRET = ""
THRESHOLD = 50 # The percentage of the song that must have been played to scrobble
USERNAME = ""
PASSWORD = ""

import os
import sys
import time
import pylast
from pync import Notifier

network = pylast.LastFMNetwork(api_key=API_KEY, api_secret=API_SECRET,
                               username=USERNAME, password_hash=pylast.md5(PASSWORD))

# ANSI escape sequences for colors
RESET_STYLE = "\033[0m"  # SGR0
TITLE_STYLE = "\033[38;5;141m"
ARTIST_STYLE = "\033[38;5;111m"
PRELUDE_STYLE = "\033[38;5;123m"
STATION_STYLE = "\033[38;5;7m"

def main():

  event = sys.argv[1]
  lines = sys.stdin.readlines()
  fields = dict([line.strip().split("=", 1) for line in lines])
  
  # Currently supported events are: artistbookmark, songban, songbookmark,
  # songexplain, songfinish, songlove, songmove, songshelf, songstart,
  # stationaddgenre, stationaddmusic, stationaddshared, stationcreate,
  # stationdelete, stationdeleteartistseed, stationdeletefeedback,
  # stationdeletesongseed, stationfetchinfo, stationfetchplaylist,
  # stationfetchgenre stationquickmixtoggle, stationrename, userlogin,
  # usergetstations

  artist = fields["artist"]
  album = fields["album"]
  title = fields["title"]
  station = fields["songStationName"]
  cover = fields["coverArt"]  
  song_duration = int(fields["songDuration"])
  song_played = int(fields["songPlayed"])
  song_started = int(time.time() - song_duration)

  # Album art files
  defaulticon = "~/.config/pianobar/pandora.png"  
  loveiconfile = '~/.config/pianobar/love.png'

  if event == "userlogin":
    Notifier.notify('Welcome back!', sender = 'com.apple.automator.pianobar-sender', timeout = 10, title = 'Pianobar Started', subtitle = 'Logged in')

  if event == "songfinish" and song_duration > 0 and 100.0 * song_played / song_duration > THRESHOLD:
    network.scrobble(artist = artist, title = title, album = album, timestamp = song_started)
    Notifier.notify(title, sender = 'com.apple.automator.pianobar-sender', timeout = 10, title = 'Scrobbled!', subtitle = artist, contentImage = cover)

  if event == "songstart":
    Notifier.notify(station, sender = 'com.apple.automator.pianobar-sender', timeout = 10, title = title, subtitle = artist, contentImage = cover)
    network.update_now_playing(artist = artist, album = album, title = title, duration = song_duration)

    with open(os.path.expanduser("~/.config/pianobar/current_song.log"), "w") as f:
        f.write(f"{artist} - {title}\n")

    print(f"""

{PRELUDE_STYLE}Now playing: {TITLE_STYLE}"{title}"{RESET_STYLE} by {ARTIST_STYLE}{artist}{RESET_STYLE}
{STATION_STYLE}From station {station}{RESET_STYLE}
""")


  if event == "songlove":
    track = pylast.Track(artist, title, network)
    track.love()
    Notifier.notify(artist, sender = 'com.apple.automator.pianobar-lover', timeout = 10, title = 'Loved a song', subtitle = title, contentImage = cover)

  if event == "stationfetchplaylist":
    Notifier.notify('Getting stations', sender = 'com.apple.automator.pianobar-sender', timeout = 10, title = 'Fetching songs...', subtitle = "Let's see what we've got!")

if __name__ == "__main__":
  main()
